{"version":3,"file":"reactivity.esm-bundler-B9rVewCG.js","sources":["../node_modules/.pnpm/@vue+shared@3.5.12/node_modules/@vue/shared/dist/shared.esm-bundler.js","../node_modules/.pnpm/@vue+reactivity@3.5.12/node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js"],"sourcesContent":["/**\n* @vue/shared v3.5.12\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction makeMap(str) {\n  const map = /* @__PURE__ */ Object.create(null);\n  for (const key of str.split(\",\")) map[key] = 1;\n  return (val) => val in map;\n}\n\nconst EMPTY_OBJ = !!(process.env.NODE_ENV !== \"production\") ? Object.freeze({}) : {};\nconst EMPTY_ARR = !!(process.env.NODE_ENV !== \"production\") ? Object.freeze([]) : [];\nconst NOOP = () => {\n};\nconst NO = () => false;\nconst isOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // uppercase letter\n(key.charCodeAt(2) > 122 || key.charCodeAt(2) < 97);\nconst isModelListener = (key) => key.startsWith(\"onUpdate:\");\nconst extend = Object.assign;\nconst remove = (arr, el) => {\n  const i = arr.indexOf(el);\n  if (i > -1) {\n    arr.splice(i, 1);\n  }\n};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\nconst isArray = Array.isArray;\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\nconst isDate = (val) => toTypeString(val) === \"[object Date]\";\nconst isRegExp = (val) => toTypeString(val) === \"[object RegExp]\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isString = (val) => typeof val === \"string\";\nconst isSymbol = (val) => typeof val === \"symbol\";\nconst isObject = (val) => val !== null && typeof val === \"object\";\nconst isPromise = (val) => {\n  return (isObject(val) || isFunction(val)) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst toRawType = (value) => {\n  return toTypeString(value).slice(8, -1);\n};\nconst isPlainObject = (val) => toTypeString(val) === \"[object Object]\";\nconst isIntegerKey = (key) => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\nconst isReservedProp = /* @__PURE__ */ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  \",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"\n);\nconst isBuiltInDirective = /* @__PURE__ */ makeMap(\n  \"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo\"\n);\nconst cacheStringFunction = (fn) => {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction(\n  (str) => {\n    return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n  }\n);\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction(\n  (str) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n);\nconst capitalize = cacheStringFunction((str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\nconst toHandlerKey = cacheStringFunction(\n  (str) => {\n    const s = str ? `on${capitalize(str)}` : ``;\n    return s;\n  }\n);\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst invokeArrayFns = (fns, ...arg) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](...arg);\n  }\n};\nconst def = (obj, key, value, writable = false) => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    writable,\n    value\n  });\n};\nconst looseToNumber = (val) => {\n  const n = parseFloat(val);\n  return isNaN(n) ? val : n;\n};\nconst toNumber = (val) => {\n  const n = isString(val) ? Number(val) : NaN;\n  return isNaN(n) ? val : n;\n};\nlet _globalThis;\nconst getGlobalThis = () => {\n  return _globalThis || (_globalThis = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n};\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\nfunction genPropsAccessExp(name) {\n  return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;\n}\nfunction genCacheKey(source, options) {\n  return source + JSON.stringify(\n    options,\n    (_, val) => typeof val === \"function\" ? val.toString() : val\n  );\n}\n\nconst PatchFlags = {\n  \"TEXT\": 1,\n  \"1\": \"TEXT\",\n  \"CLASS\": 2,\n  \"2\": \"CLASS\",\n  \"STYLE\": 4,\n  \"4\": \"STYLE\",\n  \"PROPS\": 8,\n  \"8\": \"PROPS\",\n  \"FULL_PROPS\": 16,\n  \"16\": \"FULL_PROPS\",\n  \"NEED_HYDRATION\": 32,\n  \"32\": \"NEED_HYDRATION\",\n  \"STABLE_FRAGMENT\": 64,\n  \"64\": \"STABLE_FRAGMENT\",\n  \"KEYED_FRAGMENT\": 128,\n  \"128\": \"KEYED_FRAGMENT\",\n  \"UNKEYED_FRAGMENT\": 256,\n  \"256\": \"UNKEYED_FRAGMENT\",\n  \"NEED_PATCH\": 512,\n  \"512\": \"NEED_PATCH\",\n  \"DYNAMIC_SLOTS\": 1024,\n  \"1024\": \"DYNAMIC_SLOTS\",\n  \"DEV_ROOT_FRAGMENT\": 2048,\n  \"2048\": \"DEV_ROOT_FRAGMENT\",\n  \"CACHED\": -1,\n  \"-1\": \"CACHED\",\n  \"BAIL\": -2,\n  \"-2\": \"BAIL\"\n};\nconst PatchFlagNames = {\n  [1]: `TEXT`,\n  [2]: `CLASS`,\n  [4]: `STYLE`,\n  [8]: `PROPS`,\n  [16]: `FULL_PROPS`,\n  [32]: `NEED_HYDRATION`,\n  [64]: `STABLE_FRAGMENT`,\n  [128]: `KEYED_FRAGMENT`,\n  [256]: `UNKEYED_FRAGMENT`,\n  [512]: `NEED_PATCH`,\n  [1024]: `DYNAMIC_SLOTS`,\n  [2048]: `DEV_ROOT_FRAGMENT`,\n  [-1]: `HOISTED`,\n  [-2]: `BAIL`\n};\n\nconst ShapeFlags = {\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"FUNCTIONAL_COMPONENT\": 2,\n  \"2\": \"FUNCTIONAL_COMPONENT\",\n  \"STATEFUL_COMPONENT\": 4,\n  \"4\": \"STATEFUL_COMPONENT\",\n  \"TEXT_CHILDREN\": 8,\n  \"8\": \"TEXT_CHILDREN\",\n  \"ARRAY_CHILDREN\": 16,\n  \"16\": \"ARRAY_CHILDREN\",\n  \"SLOTS_CHILDREN\": 32,\n  \"32\": \"SLOTS_CHILDREN\",\n  \"TELEPORT\": 64,\n  \"64\": \"TELEPORT\",\n  \"SUSPENSE\": 128,\n  \"128\": \"SUSPENSE\",\n  \"COMPONENT_SHOULD_KEEP_ALIVE\": 256,\n  \"256\": \"COMPONENT_SHOULD_KEEP_ALIVE\",\n  \"COMPONENT_KEPT_ALIVE\": 512,\n  \"512\": \"COMPONENT_KEPT_ALIVE\",\n  \"COMPONENT\": 6,\n  \"6\": \"COMPONENT\"\n};\n\nconst SlotFlags = {\n  \"STABLE\": 1,\n  \"1\": \"STABLE\",\n  \"DYNAMIC\": 2,\n  \"2\": \"DYNAMIC\",\n  \"FORWARDED\": 3,\n  \"3\": \"FORWARDED\"\n};\nconst slotFlagsText = {\n  [1]: \"STABLE\",\n  [2]: \"DYNAMIC\",\n  [3]: \"FORWARDED\"\n};\n\nconst GLOBALS_ALLOWED = \"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error,Symbol\";\nconst isGloballyAllowed = /* @__PURE__ */ makeMap(GLOBALS_ALLOWED);\nconst isGloballyWhitelisted = isGloballyAllowed;\n\nconst range = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n  start = Math.max(0, Math.min(start, source.length));\n  end = Math.max(0, Math.min(end, source.length));\n  if (start > end) return \"\";\n  let lines = source.split(/(\\r?\\n)/);\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n  lines = lines.filter((_, idx) => idx % 2 === 0);\n  let count = 0;\n  const res = [];\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) continue;\n        const line = j + 1;\n        res.push(\n          `${line}${\" \".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`\n        );\n        const lineLength = lines[j].length;\n        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;\n        if (j === i) {\n          const pad = start - (count - (lineLength + newLineSeqLength));\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start\n          );\n          res.push(`   |  ` + \" \".repeat(pad) + \"^\".repeat(length));\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1);\n            res.push(`   |  ` + \"^\".repeat(length));\n          }\n          count += lineLength + newLineSeqLength;\n        }\n      }\n      break;\n    }\n  }\n  return res.join(\"\\n\");\n}\n\nfunction normalizeStyle(value) {\n  if (isArray(value)) {\n    const res = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key];\n        }\n      }\n    }\n    return res;\n  } else if (isString(value) || isObject(value)) {\n    return value;\n  }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g;\nfunction parseStringStyle(cssText) {\n  const ret = {};\n  cssText.replace(styleCommentRE, \"\").split(listDelimiterRE).forEach((item) => {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE);\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return ret;\n}\nfunction stringifyStyle(styles) {\n  let ret = \"\";\n  if (!styles || isString(styles)) {\n    return ret;\n  }\n  for (const key in styles) {\n    const value = styles[key];\n    if (isString(value) || typeof value === \"number\") {\n      const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n      ret += `${normalizedKey}:${value};`;\n    }\n  }\n  return ret;\n}\nfunction normalizeClass(value) {\n  let res = \"\";\n  if (isString(value)) {\n    res = value;\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i]);\n      if (normalized) {\n        res += normalized + \" \";\n      }\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + \" \";\n      }\n    }\n  }\n  return res.trim();\n}\nfunction normalizeProps(props) {\n  if (!props) return null;\n  let { class: klass, style } = props;\n  if (klass && !isString(klass)) {\n    props.class = normalizeClass(klass);\n  }\n  if (style) {\n    props.style = normalizeStyle(style);\n  }\n  return props;\n}\n\nconst HTML_TAGS = \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot\";\nconst SVG_TAGS = \"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view\";\nconst MATH_TAGS = \"annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics\";\nconst VOID_TAGS = \"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr\";\nconst isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);\nconst isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);\nconst isMathMLTag = /* @__PURE__ */ makeMap(MATH_TAGS);\nconst isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);\n\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);\nconst isBooleanAttr = /* @__PURE__ */ makeMap(\n  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`\n);\nfunction includeBooleanAttr(value) {\n  return !!value || value === \"\";\n}\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\nfunction isSSRSafeAttrName(name) {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name];\n  }\n  const isUnsafe = unsafeAttrCharRE.test(name);\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`);\n  }\n  return attrValidationCache[name] = !isUnsafe;\n}\nconst propsToAttrMap = {\n  acceptCharset: \"accept-charset\",\n  className: \"class\",\n  htmlFor: \"for\",\n  httpEquiv: \"http-equiv\"\n};\nconst isKnownHtmlAttr = /* @__PURE__ */ makeMap(\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`\n);\nconst isKnownSvgAttr = /* @__PURE__ */ makeMap(\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\n);\nconst isKnownMathMLAttr = /* @__PURE__ */ makeMap(\n  `accent,accentunder,actiontype,align,alignmentscope,altimg,altimg-height,altimg-valign,altimg-width,alttext,bevelled,close,columnsalign,columnlines,columnspan,denomalign,depth,dir,display,displaystyle,encoding,equalcolumns,equalrows,fence,fontstyle,fontweight,form,frame,framespacing,groupalign,height,href,id,indentalign,indentalignfirst,indentalignlast,indentshift,indentshiftfirst,indentshiftlast,indextype,justify,largetop,largeop,lquote,lspace,mathbackground,mathcolor,mathsize,mathvariant,maxsize,minlabelspacing,mode,other,overflow,position,rowalign,rowlines,rowspan,rquote,rspace,scriptlevel,scriptminsize,scriptsizemultiplier,selection,separator,separators,shift,side,src,stackalign,stretchy,subscriptshift,superscriptshift,symmetric,voffset,width,widths,xlink:href,xlink:show,xlink:type,xmlns`\n);\nfunction isRenderableAttrValue(value) {\n  if (value == null) {\n    return false;\n  }\n  const type = typeof value;\n  return type === \"string\" || type === \"number\" || type === \"boolean\";\n}\n\nconst escapeRE = /[\"'&<>]/;\nfunction escapeHtml(string) {\n  const str = \"\" + string;\n  const match = escapeRE.exec(str);\n  if (!match) {\n    return str;\n  }\n  let html = \"\";\n  let escaped;\n  let index;\n  let lastIndex = 0;\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escaped = \"&quot;\";\n        break;\n      case 38:\n        escaped = \"&amp;\";\n        break;\n      case 39:\n        escaped = \"&#39;\";\n        break;\n      case 60:\n        escaped = \"&lt;\";\n        break;\n      case 62:\n        escaped = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== index) {\n      html += str.slice(lastIndex, index);\n    }\n    lastIndex = index + 1;\n    html += escaped;\n  }\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n}\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\nfunction escapeHtmlComment(src) {\n  return src.replace(commentStripRE, \"\");\n}\nconst cssVarNameEscapeSymbolsRE = /[ !\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~]/g;\nfunction getEscapedCssVarName(key, doubleEscape) {\n  return key.replace(\n    cssVarNameEscapeSymbolsRE,\n    (s) => doubleEscape ? s === '\"' ? '\\\\\\\\\\\\\"' : `\\\\\\\\${s}` : `\\\\${s}`\n  );\n}\n\nfunction looseCompareArrays(a, b) {\n  if (a.length !== b.length) return false;\n  let equal = true;\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i]);\n  }\n  return equal;\n}\nfunction looseEqual(a, b) {\n  if (a === b) return true;\n  let aValidType = isDate(a);\n  let bValidType = isDate(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n  }\n  aValidType = isSymbol(a);\n  bValidType = isSymbol(b);\n  if (aValidType || bValidType) {\n    return a === b;\n  }\n  aValidType = isArray(a);\n  bValidType = isArray(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n  }\n  aValidType = isObject(a);\n  bValidType = isObject(b);\n  if (aValidType || bValidType) {\n    if (!aValidType || !bValidType) {\n      return false;\n    }\n    const aKeysCount = Object.keys(a).length;\n    const bKeysCount = Object.keys(b).length;\n    if (aKeysCount !== bKeysCount) {\n      return false;\n    }\n    for (const key in a) {\n      const aHasKey = a.hasOwnProperty(key);\n      const bHasKey = b.hasOwnProperty(key);\n      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n  }\n  return String(a) === String(b);\n}\nfunction looseIndexOf(arr, val) {\n  return arr.findIndex((item) => looseEqual(item, val));\n}\n\nconst isRef = (val) => {\n  return !!(val && val[\"__v_isRef\"] === true);\n};\nconst toDisplayString = (val) => {\n  return isString(val) ? val : val == null ? \"\" : isArray(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? isRef(val) ? toDisplayString(val.value) : JSON.stringify(val, replacer, 2) : String(val);\n};\nconst replacer = (_key, val) => {\n  if (isRef(val)) {\n    return replacer(_key, val.value);\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce(\n        (entries, [key, val2], i) => {\n          entries[stringifySymbol(key, i) + \" =>\"] = val2;\n          return entries;\n        },\n        {}\n      )\n    };\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()].map((v) => stringifySymbol(v))\n    };\n  } else if (isSymbol(val)) {\n    return stringifySymbol(val);\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n    return String(val);\n  }\n  return val;\n};\nconst stringifySymbol = (v, i = \"\") => {\n  var _a;\n  return (\n    // Symbol.description in es2019+ so we need to cast here to pass\n    // the lib: es2016 check\n    isSymbol(v) ? `Symbol(${(_a = v.description) != null ? _a : i})` : v\n  );\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, PatchFlags, ShapeFlags, SlotFlags, camelize, capitalize, cssVarNameEscapeSymbolsRE, def, escapeHtml, escapeHtmlComment, extend, genCacheKey, genPropsAccessExp, generateCodeFrame, getEscapedCssVarName, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isBuiltInDirective, isDate, isFunction, isGloballyAllowed, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownMathMLAttr, isKnownSvgAttr, isMap, isMathMLTag, isModelListener, isObject, isOn, isPlainObject, isPromise, isRegExp, isRenderableAttrValue, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, looseToNumber, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","/**\n* @vue/reactivity v3.5.12\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\nimport { hasChanged, extend, isArray, isIntegerKey, isSymbol, isMap, hasOwn, isObject, makeMap, toRawType, capitalize, def, isFunction, EMPTY_OBJ, isSet, isPlainObject, NOOP, remove } from '@vue/shared';\n\nfunction warn(msg, ...args) {\n  console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n  constructor(detached = false) {\n    this.detached = detached;\n    /**\n     * @internal\n     */\n    this._active = true;\n    /**\n     * @internal\n     */\n    this.effects = [];\n    /**\n     * @internal\n     */\n    this.cleanups = [];\n    this._isPaused = false;\n    this.parent = activeEffectScope;\n    if (!detached && activeEffectScope) {\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n        this\n      ) - 1;\n    }\n  }\n  get active() {\n    return this._active;\n  }\n  pause() {\n    if (this._active) {\n      this._isPaused = true;\n      let i, l;\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].pause();\n        }\n      }\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].pause();\n      }\n    }\n  }\n  /**\n   * Resumes the effect scope, including all child scopes and effects.\n   */\n  resume() {\n    if (this._active) {\n      if (this._isPaused) {\n        this._isPaused = false;\n        let i, l;\n        if (this.scopes) {\n          for (i = 0, l = this.scopes.length; i < l; i++) {\n            this.scopes[i].resume();\n          }\n        }\n        for (i = 0, l = this.effects.length; i < l; i++) {\n          this.effects[i].resume();\n        }\n      }\n    }\n  }\n  run(fn) {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope;\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`cannot run an inactive effect scope.`);\n    }\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on() {\n    activeEffectScope = this;\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off() {\n    activeEffectScope = this.parent;\n  }\n  stop(fromParent) {\n    if (this._active) {\n      let i, l;\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      }\n      if (!this.detached && this.parent && !fromParent) {\n        const last = this.parent.scopes.pop();\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n      this.parent = void 0;\n      this._active = false;\n    }\n  }\n}\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\nfunction onScopeDispose(fn, failSilently = false) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  } else if (!!(process.env.NODE_ENV !== \"production\") && !failSilently) {\n    warn(\n      `onScopeDispose() is called when there is no active effect scope to be associated with.`\n    );\n  }\n}\n\nlet activeSub;\nconst EffectFlags = {\n  \"ACTIVE\": 1,\n  \"1\": \"ACTIVE\",\n  \"RUNNING\": 2,\n  \"2\": \"RUNNING\",\n  \"TRACKING\": 4,\n  \"4\": \"TRACKING\",\n  \"NOTIFIED\": 8,\n  \"8\": \"NOTIFIED\",\n  \"DIRTY\": 16,\n  \"16\": \"DIRTY\",\n  \"ALLOW_RECURSE\": 32,\n  \"32\": \"ALLOW_RECURSE\",\n  \"PAUSED\": 64,\n  \"64\": \"PAUSED\"\n};\nconst pausedQueueEffects = /* @__PURE__ */ new WeakSet();\nclass ReactiveEffect {\n  constructor(fn) {\n    this.fn = fn;\n    /**\n     * @internal\n     */\n    this.deps = void 0;\n    /**\n     * @internal\n     */\n    this.depsTail = void 0;\n    /**\n     * @internal\n     */\n    this.flags = 1 | 4;\n    /**\n     * @internal\n     */\n    this.next = void 0;\n    /**\n     * @internal\n     */\n    this.cleanup = void 0;\n    this.scheduler = void 0;\n    if (activeEffectScope && activeEffectScope.active) {\n      activeEffectScope.effects.push(this);\n    }\n  }\n  pause() {\n    this.flags |= 64;\n  }\n  resume() {\n    if (this.flags & 64) {\n      this.flags &= ~64;\n      if (pausedQueueEffects.has(this)) {\n        pausedQueueEffects.delete(this);\n        this.trigger();\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  notify() {\n    if (this.flags & 2 && !(this.flags & 32)) {\n      return;\n    }\n    if (!(this.flags & 8)) {\n      batch(this);\n    }\n  }\n  run() {\n    if (!(this.flags & 1)) {\n      return this.fn();\n    }\n    this.flags |= 2;\n    cleanupEffect(this);\n    prepareDeps(this);\n    const prevEffect = activeSub;\n    const prevShouldTrack = shouldTrack;\n    activeSub = this;\n    shouldTrack = true;\n    try {\n      return this.fn();\n    } finally {\n      if (!!(process.env.NODE_ENV !== \"production\") && activeSub !== this) {\n        warn(\n          \"Active effect was not restored correctly - this is likely a Vue internal bug.\"\n        );\n      }\n      cleanupDeps(this);\n      activeSub = prevEffect;\n      shouldTrack = prevShouldTrack;\n      this.flags &= ~2;\n    }\n  }\n  stop() {\n    if (this.flags & 1) {\n      for (let link = this.deps; link; link = link.nextDep) {\n        removeSub(link);\n      }\n      this.deps = this.depsTail = void 0;\n      cleanupEffect(this);\n      this.onStop && this.onStop();\n      this.flags &= ~1;\n    }\n  }\n  trigger() {\n    if (this.flags & 64) {\n      pausedQueueEffects.add(this);\n    } else if (this.scheduler) {\n      this.scheduler();\n    } else {\n      this.runIfDirty();\n    }\n  }\n  /**\n   * @internal\n   */\n  runIfDirty() {\n    if (isDirty(this)) {\n      this.run();\n    }\n  }\n  get dirty() {\n    return isDirty(this);\n  }\n}\nlet batchDepth = 0;\nlet batchedSub;\nlet batchedComputed;\nfunction batch(sub, isComputed = false) {\n  sub.flags |= 8;\n  if (isComputed) {\n    sub.next = batchedComputed;\n    batchedComputed = sub;\n    return;\n  }\n  sub.next = batchedSub;\n  batchedSub = sub;\n}\nfunction startBatch() {\n  batchDepth++;\n}\nfunction endBatch() {\n  if (--batchDepth > 0) {\n    return;\n  }\n  if (batchedComputed) {\n    let e = batchedComputed;\n    batchedComputed = void 0;\n    while (e) {\n      const next = e.next;\n      e.next = void 0;\n      e.flags &= ~8;\n      e = next;\n    }\n  }\n  let error;\n  while (batchedSub) {\n    let e = batchedSub;\n    batchedSub = void 0;\n    while (e) {\n      const next = e.next;\n      e.next = void 0;\n      e.flags &= ~8;\n      if (e.flags & 1) {\n        try {\n          ;\n          e.trigger();\n        } catch (err) {\n          if (!error) error = err;\n        }\n      }\n      e = next;\n    }\n  }\n  if (error) throw error;\n}\nfunction prepareDeps(sub) {\n  for (let link = sub.deps; link; link = link.nextDep) {\n    link.version = -1;\n    link.prevActiveLink = link.dep.activeLink;\n    link.dep.activeLink = link;\n  }\n}\nfunction cleanupDeps(sub) {\n  let head;\n  let tail = sub.depsTail;\n  let link = tail;\n  while (link) {\n    const prev = link.prevDep;\n    if (link.version === -1) {\n      if (link === tail) tail = prev;\n      removeSub(link);\n      removeDep(link);\n    } else {\n      head = link;\n    }\n    link.dep.activeLink = link.prevActiveLink;\n    link.prevActiveLink = void 0;\n    link = prev;\n  }\n  sub.deps = head;\n  sub.depsTail = tail;\n}\nfunction isDirty(sub) {\n  for (let link = sub.deps; link; link = link.nextDep) {\n    if (link.dep.version !== link.version || link.dep.computed && (refreshComputed(link.dep.computed) || link.dep.version !== link.version)) {\n      return true;\n    }\n  }\n  if (sub._dirty) {\n    return true;\n  }\n  return false;\n}\nfunction refreshComputed(computed) {\n  if (computed.flags & 4 && !(computed.flags & 16)) {\n    return;\n  }\n  computed.flags &= ~16;\n  if (computed.globalVersion === globalVersion) {\n    return;\n  }\n  computed.globalVersion = globalVersion;\n  const dep = computed.dep;\n  computed.flags |= 2;\n  if (dep.version > 0 && !computed.isSSR && computed.deps && !isDirty(computed)) {\n    computed.flags &= ~2;\n    return;\n  }\n  const prevSub = activeSub;\n  const prevShouldTrack = shouldTrack;\n  activeSub = computed;\n  shouldTrack = true;\n  try {\n    prepareDeps(computed);\n    const value = computed.fn(computed._value);\n    if (dep.version === 0 || hasChanged(value, computed._value)) {\n      computed._value = value;\n      dep.version++;\n    }\n  } catch (err) {\n    dep.version++;\n    throw err;\n  } finally {\n    activeSub = prevSub;\n    shouldTrack = prevShouldTrack;\n    cleanupDeps(computed);\n    computed.flags &= ~2;\n  }\n}\nfunction removeSub(link, soft = false) {\n  const { dep, prevSub, nextSub } = link;\n  if (prevSub) {\n    prevSub.nextSub = nextSub;\n    link.prevSub = void 0;\n  }\n  if (nextSub) {\n    nextSub.prevSub = prevSub;\n    link.nextSub = void 0;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && dep.subsHead === link) {\n    dep.subsHead = nextSub;\n  }\n  if (dep.subs === link) {\n    dep.subs = prevSub;\n    if (!prevSub && dep.computed) {\n      dep.computed.flags &= ~4;\n      for (let l = dep.computed.deps; l; l = l.nextDep) {\n        removeSub(l, true);\n      }\n    }\n  }\n  if (!soft && !--dep.sc && dep.map) {\n    dep.map.delete(dep.key);\n  }\n}\nfunction removeDep(link) {\n  const { prevDep, nextDep } = link;\n  if (prevDep) {\n    prevDep.nextDep = nextDep;\n    link.prevDep = void 0;\n  }\n  if (nextDep) {\n    nextDep.prevDep = prevDep;\n    link.nextDep = void 0;\n  }\n}\nfunction effect(fn, options) {\n  if (fn.effect instanceof ReactiveEffect) {\n    fn = fn.effect.fn;\n  }\n  const e = new ReactiveEffect(fn);\n  if (options) {\n    extend(e, options);\n  }\n  try {\n    e.run();\n  } catch (err) {\n    e.stop();\n    throw err;\n  }\n  const runner = e.run.bind(e);\n  runner.effect = e;\n  return runner;\n}\nfunction stop(runner) {\n  runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\nfunction onEffectCleanup(fn, failSilently = false) {\n  if (activeSub instanceof ReactiveEffect) {\n    activeSub.cleanup = fn;\n  } else if (!!(process.env.NODE_ENV !== \"production\") && !failSilently) {\n    warn(\n      `onEffectCleanup() was called when there was no active effect to associate with.`\n    );\n  }\n}\nfunction cleanupEffect(e) {\n  const { cleanup } = e;\n  e.cleanup = void 0;\n  if (cleanup) {\n    const prevSub = activeSub;\n    activeSub = void 0;\n    try {\n      cleanup();\n    } finally {\n      activeSub = prevSub;\n    }\n  }\n}\n\nlet globalVersion = 0;\nclass Link {\n  constructor(sub, dep) {\n    this.sub = sub;\n    this.dep = dep;\n    this.version = dep.version;\n    this.nextDep = this.prevDep = this.nextSub = this.prevSub = this.prevActiveLink = void 0;\n  }\n}\nclass Dep {\n  constructor(computed) {\n    this.computed = computed;\n    this.version = 0;\n    /**\n     * Link between this dep and the current active effect\n     */\n    this.activeLink = void 0;\n    /**\n     * Doubly linked list representing the subscribing effects (tail)\n     */\n    this.subs = void 0;\n    /**\n     * For object property deps cleanup\n     */\n    this.map = void 0;\n    this.key = void 0;\n    /**\n     * Subscriber counter\n     */\n    this.sc = 0;\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      this.subsHead = void 0;\n    }\n  }\n  track(debugInfo) {\n    if (!activeSub || !shouldTrack || activeSub === this.computed) {\n      return;\n    }\n    let link = this.activeLink;\n    if (link === void 0 || link.sub !== activeSub) {\n      link = this.activeLink = new Link(activeSub, this);\n      if (!activeSub.deps) {\n        activeSub.deps = activeSub.depsTail = link;\n      } else {\n        link.prevDep = activeSub.depsTail;\n        activeSub.depsTail.nextDep = link;\n        activeSub.depsTail = link;\n      }\n      addSub(link);\n    } else if (link.version === -1) {\n      link.version = this.version;\n      if (link.nextDep) {\n        const next = link.nextDep;\n        next.prevDep = link.prevDep;\n        if (link.prevDep) {\n          link.prevDep.nextDep = next;\n        }\n        link.prevDep = activeSub.depsTail;\n        link.nextDep = void 0;\n        activeSub.depsTail.nextDep = link;\n        activeSub.depsTail = link;\n        if (activeSub.deps === link) {\n          activeSub.deps = next;\n        }\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") && activeSub.onTrack) {\n      activeSub.onTrack(\n        extend(\n          {\n            effect: activeSub\n          },\n          debugInfo\n        )\n      );\n    }\n    return link;\n  }\n  trigger(debugInfo) {\n    this.version++;\n    globalVersion++;\n    this.notify(debugInfo);\n  }\n  notify(debugInfo) {\n    startBatch();\n    try {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        for (let head = this.subsHead; head; head = head.nextSub) {\n          if (head.sub.onTrigger && !(head.sub.flags & 8)) {\n            head.sub.onTrigger(\n              extend(\n                {\n                  effect: head.sub\n                },\n                debugInfo\n              )\n            );\n          }\n        }\n      }\n      for (let link = this.subs; link; link = link.prevSub) {\n        if (link.sub.notify()) {\n          ;\n          link.sub.dep.notify();\n        }\n      }\n    } finally {\n      endBatch();\n    }\n  }\n}\nfunction addSub(link) {\n  link.dep.sc++;\n  if (link.sub.flags & 4) {\n    const computed = link.dep.computed;\n    if (computed && !link.dep.subs) {\n      computed.flags |= 4 | 16;\n      for (let l = computed.deps; l; l = l.nextDep) {\n        addSub(l);\n      }\n    }\n    const currentTail = link.dep.subs;\n    if (currentTail !== link) {\n      link.prevSub = currentTail;\n      if (currentTail) currentTail.nextSub = link;\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") && link.dep.subsHead === void 0) {\n      link.dep.subsHead = link;\n    }\n    link.dep.subs = link;\n  }\n}\nconst targetMap = /* @__PURE__ */ new WeakMap();\nconst ITERATE_KEY = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? \"Object iterate\" : \"\"\n);\nconst MAP_KEY_ITERATE_KEY = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? \"Map keys iterate\" : \"\"\n);\nconst ARRAY_ITERATE_KEY = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? \"Array iterate\" : \"\"\n);\nfunction track(target, type, key) {\n  if (shouldTrack && activeSub) {\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n      depsMap.set(key, dep = new Dep());\n      dep.map = depsMap;\n      dep.key = key;\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      dep.track({\n        target,\n        type,\n        key\n      });\n    } else {\n      dep.track();\n    }\n  }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) {\n    globalVersion++;\n    return;\n  }\n  const run = (dep) => {\n    if (dep) {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        dep.trigger({\n          target,\n          type,\n          key,\n          newValue,\n          oldValue,\n          oldTarget\n        });\n      } else {\n        dep.trigger();\n      }\n    }\n  };\n  startBatch();\n  if (type === \"clear\") {\n    depsMap.forEach(run);\n  } else {\n    const targetIsArray = isArray(target);\n    const isArrayIndex = targetIsArray && isIntegerKey(key);\n    if (targetIsArray && key === \"length\") {\n      const newLength = Number(newValue);\n      depsMap.forEach((dep, key2) => {\n        if (key2 === \"length\" || key2 === ARRAY_ITERATE_KEY || !isSymbol(key2) && key2 >= newLength) {\n          run(dep);\n        }\n      });\n    } else {\n      if (key !== void 0 || depsMap.has(void 0)) {\n        run(depsMap.get(key));\n      }\n      if (isArrayIndex) {\n        run(depsMap.get(ARRAY_ITERATE_KEY));\n      }\n      switch (type) {\n        case \"add\":\n          if (!targetIsArray) {\n            run(depsMap.get(ITERATE_KEY));\n            if (isMap(target)) {\n              run(depsMap.get(MAP_KEY_ITERATE_KEY));\n            }\n          } else if (isArrayIndex) {\n            run(depsMap.get(\"length\"));\n          }\n          break;\n        case \"delete\":\n          if (!targetIsArray) {\n            run(depsMap.get(ITERATE_KEY));\n            if (isMap(target)) {\n              run(depsMap.get(MAP_KEY_ITERATE_KEY));\n            }\n          }\n          break;\n        case \"set\":\n          if (isMap(target)) {\n            run(depsMap.get(ITERATE_KEY));\n          }\n          break;\n      }\n    }\n  }\n  endBatch();\n}\nfunction getDepFromReactive(object, key) {\n  const depMap = targetMap.get(object);\n  return depMap && depMap.get(key);\n}\n\nfunction reactiveReadArray(array) {\n  const raw = toRaw(array);\n  if (raw === array) return raw;\n  track(raw, \"iterate\", ARRAY_ITERATE_KEY);\n  return isShallow(array) ? raw : raw.map(toReactive);\n}\nfunction shallowReadArray(arr) {\n  track(arr = toRaw(arr), \"iterate\", ARRAY_ITERATE_KEY);\n  return arr;\n}\nconst arrayInstrumentations = {\n  __proto__: null,\n  [Symbol.iterator]() {\n    return iterator(this, Symbol.iterator, toReactive);\n  },\n  concat(...args) {\n    return reactiveReadArray(this).concat(\n      ...args.map((x) => isArray(x) ? reactiveReadArray(x) : x)\n    );\n  },\n  entries() {\n    return iterator(this, \"entries\", (value) => {\n      value[1] = toReactive(value[1]);\n      return value;\n    });\n  },\n  every(fn, thisArg) {\n    return apply(this, \"every\", fn, thisArg, void 0, arguments);\n  },\n  filter(fn, thisArg) {\n    return apply(this, \"filter\", fn, thisArg, (v) => v.map(toReactive), arguments);\n  },\n  find(fn, thisArg) {\n    return apply(this, \"find\", fn, thisArg, toReactive, arguments);\n  },\n  findIndex(fn, thisArg) {\n    return apply(this, \"findIndex\", fn, thisArg, void 0, arguments);\n  },\n  findLast(fn, thisArg) {\n    return apply(this, \"findLast\", fn, thisArg, toReactive, arguments);\n  },\n  findLastIndex(fn, thisArg) {\n    return apply(this, \"findLastIndex\", fn, thisArg, void 0, arguments);\n  },\n  // flat, flatMap could benefit from ARRAY_ITERATE but are not straight-forward to implement\n  forEach(fn, thisArg) {\n    return apply(this, \"forEach\", fn, thisArg, void 0, arguments);\n  },\n  includes(...args) {\n    return searchProxy(this, \"includes\", args);\n  },\n  indexOf(...args) {\n    return searchProxy(this, \"indexOf\", args);\n  },\n  join(separator) {\n    return reactiveReadArray(this).join(separator);\n  },\n  // keys() iterator only reads `length`, no optimisation required\n  lastIndexOf(...args) {\n    return searchProxy(this, \"lastIndexOf\", args);\n  },\n  map(fn, thisArg) {\n    return apply(this, \"map\", fn, thisArg, void 0, arguments);\n  },\n  pop() {\n    return noTracking(this, \"pop\");\n  },\n  push(...args) {\n    return noTracking(this, \"push\", args);\n  },\n  reduce(fn, ...args) {\n    return reduce(this, \"reduce\", fn, args);\n  },\n  reduceRight(fn, ...args) {\n    return reduce(this, \"reduceRight\", fn, args);\n  },\n  shift() {\n    return noTracking(this, \"shift\");\n  },\n  // slice could use ARRAY_ITERATE but also seems to beg for range tracking\n  some(fn, thisArg) {\n    return apply(this, \"some\", fn, thisArg, void 0, arguments);\n  },\n  splice(...args) {\n    return noTracking(this, \"splice\", args);\n  },\n  toReversed() {\n    return reactiveReadArray(this).toReversed();\n  },\n  toSorted(comparer) {\n    return reactiveReadArray(this).toSorted(comparer);\n  },\n  toSpliced(...args) {\n    return reactiveReadArray(this).toSpliced(...args);\n  },\n  unshift(...args) {\n    return noTracking(this, \"unshift\", args);\n  },\n  values() {\n    return iterator(this, \"values\", toReactive);\n  }\n};\nfunction iterator(self, method, wrapValue) {\n  const arr = shallowReadArray(self);\n  const iter = arr[method]();\n  if (arr !== self && !isShallow(self)) {\n    iter._next = iter.next;\n    iter.next = () => {\n      const result = iter._next();\n      if (result.value) {\n        result.value = wrapValue(result.value);\n      }\n      return result;\n    };\n  }\n  return iter;\n}\nconst arrayProto = Array.prototype;\nfunction apply(self, method, fn, thisArg, wrappedRetFn, args) {\n  const arr = shallowReadArray(self);\n  const needsWrap = arr !== self && !isShallow(self);\n  const methodFn = arr[method];\n  if (methodFn !== arrayProto[method]) {\n    const result2 = methodFn.apply(self, args);\n    return needsWrap ? toReactive(result2) : result2;\n  }\n  let wrappedFn = fn;\n  if (arr !== self) {\n    if (needsWrap) {\n      wrappedFn = function(item, index) {\n        return fn.call(this, toReactive(item), index, self);\n      };\n    } else if (fn.length > 2) {\n      wrappedFn = function(item, index) {\n        return fn.call(this, item, index, self);\n      };\n    }\n  }\n  const result = methodFn.call(arr, wrappedFn, thisArg);\n  return needsWrap && wrappedRetFn ? wrappedRetFn(result) : result;\n}\nfunction reduce(self, method, fn, args) {\n  const arr = shallowReadArray(self);\n  let wrappedFn = fn;\n  if (arr !== self) {\n    if (!isShallow(self)) {\n      wrappedFn = function(acc, item, index) {\n        return fn.call(this, acc, toReactive(item), index, self);\n      };\n    } else if (fn.length > 3) {\n      wrappedFn = function(acc, item, index) {\n        return fn.call(this, acc, item, index, self);\n      };\n    }\n  }\n  return arr[method](wrappedFn, ...args);\n}\nfunction searchProxy(self, method, args) {\n  const arr = toRaw(self);\n  track(arr, \"iterate\", ARRAY_ITERATE_KEY);\n  const res = arr[method](...args);\n  if ((res === -1 || res === false) && isProxy(args[0])) {\n    args[0] = toRaw(args[0]);\n    return arr[method](...args);\n  }\n  return res;\n}\nfunction noTracking(self, method, args = []) {\n  pauseTracking();\n  startBatch();\n  const res = toRaw(self)[method].apply(self, args);\n  endBatch();\n  resetTracking();\n  return res;\n}\n\nconst isNonTrackableKeys = /* @__PURE__ */ makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== \"arguments\" && key !== \"caller\").map((key) => Symbol[key]).filter(isSymbol)\n);\nfunction hasOwnProperty(key) {\n  if (!isSymbol(key)) key = String(key);\n  const obj = toRaw(this);\n  track(obj, \"has\", key);\n  return obj.hasOwnProperty(key);\n}\nclass BaseReactiveHandler {\n  constructor(_isReadonly = false, _isShallow = false) {\n    this._isReadonly = _isReadonly;\n    this._isShallow = _isShallow;\n  }\n  get(target, key, receiver) {\n    const isReadonly2 = this._isReadonly, isShallow2 = this._isShallow;\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_isShallow\") {\n      return isShallow2;\n    } else if (key === \"__v_raw\") {\n      if (receiver === (isReadonly2 ? isShallow2 ? shallowReadonlyMap : readonlyMap : isShallow2 ? shallowReactiveMap : reactiveMap).get(target) || // receiver is not the reactive proxy, but has the same prototype\n      // this means the receiver is a user proxy of the reactive proxy\n      Object.getPrototypeOf(target) === Object.getPrototypeOf(receiver)) {\n        return target;\n      }\n      return;\n    }\n    const targetIsArray = isArray(target);\n    if (!isReadonly2) {\n      let fn;\n      if (targetIsArray && (fn = arrayInstrumentations[key])) {\n        return fn;\n      }\n      if (key === \"hasOwnProperty\") {\n        return hasOwnProperty;\n      }\n    }\n    const res = Reflect.get(\n      target,\n      key,\n      // if this is a proxy wrapping a ref, return methods using the raw ref\n      // as receiver so that we don't have to call `toRaw` on the ref in all\n      // its class methods\n      isRef(target) ? target : receiver\n    );\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n    if (!isReadonly2) {\n      track(target, \"get\", key);\n    }\n    if (isShallow2) {\n      return res;\n    }\n    if (isRef(res)) {\n      return targetIsArray && isIntegerKey(key) ? res : res.value;\n    }\n    if (isObject(res)) {\n      return isReadonly2 ? readonly(res) : reactive(res);\n    }\n    return res;\n  }\n}\nclass MutableReactiveHandler extends BaseReactiveHandler {\n  constructor(isShallow2 = false) {\n    super(false, isShallow2);\n  }\n  set(target, key, value, receiver) {\n    let oldValue = target[key];\n    if (!this._isShallow) {\n      const isOldValueReadonly = isReadonly(oldValue);\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue);\n        value = toRaw(value);\n      }\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        if (isOldValueReadonly) {\n          return false;\n        } else {\n          oldValue.value = value;\n          return true;\n        }\n      }\n    }\n    const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n    const result = Reflect.set(\n      target,\n      key,\n      value,\n      isRef(target) ? target : receiver\n    );\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value, oldValue);\n      }\n    }\n    return result;\n  }\n  deleteProperty(target, key) {\n    const hadKey = hasOwn(target, key);\n    const oldValue = target[key];\n    const result = Reflect.deleteProperty(target, key);\n    if (result && hadKey) {\n      trigger(target, \"delete\", key, void 0, oldValue);\n    }\n    return result;\n  }\n  has(target, key) {\n    const result = Reflect.has(target, key);\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\n      track(target, \"has\", key);\n    }\n    return result;\n  }\n  ownKeys(target) {\n    track(\n      target,\n      \"iterate\",\n      isArray(target) ? \"length\" : ITERATE_KEY\n    );\n    return Reflect.ownKeys(target);\n  }\n}\nclass ReadonlyReactiveHandler extends BaseReactiveHandler {\n  constructor(isShallow2 = false) {\n    super(true, isShallow2);\n  }\n  set(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n  deleteProperty(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n}\nconst mutableHandlers = /* @__PURE__ */ new MutableReactiveHandler();\nconst readonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler();\nconst shallowReactiveHandlers = /* @__PURE__ */ new MutableReactiveHandler(true);\nconst shallowReadonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler(true);\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction createIterableMethod(method, isReadonly2, isShallow2) {\n  return function(...args) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const targetIsMap = isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;\n    !isReadonly2 && track(\n      rawTarget,\n      \"iterate\",\n      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\n    );\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next();\n        return done ? { value, done } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  };\n}\nfunction createReadonlyMethod(type) {\n  return function(...args) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n      warn(\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\n        toRaw(this)\n      );\n    }\n    return type === \"delete\" ? false : type === \"clear\" ? void 0 : this;\n  };\n}\nfunction createInstrumentations(readonly, shallow) {\n  const instrumentations = {\n    get(key) {\n      const target = this[\"__v_raw\"];\n      const rawTarget = toRaw(target);\n      const rawKey = toRaw(key);\n      if (!readonly) {\n        if (hasChanged(key, rawKey)) {\n          track(rawTarget, \"get\", key);\n        }\n        track(rawTarget, \"get\", rawKey);\n      }\n      const { has } = getProto(rawTarget);\n      const wrap = shallow ? toShallow : readonly ? toReadonly : toReactive;\n      if (has.call(rawTarget, key)) {\n        return wrap(target.get(key));\n      } else if (has.call(rawTarget, rawKey)) {\n        return wrap(target.get(rawKey));\n      } else if (target !== rawTarget) {\n        target.get(key);\n      }\n    },\n    get size() {\n      const target = this[\"__v_raw\"];\n      !readonly && track(toRaw(target), \"iterate\", ITERATE_KEY);\n      return Reflect.get(target, \"size\", target);\n    },\n    has(key) {\n      const target = this[\"__v_raw\"];\n      const rawTarget = toRaw(target);\n      const rawKey = toRaw(key);\n      if (!readonly) {\n        if (hasChanged(key, rawKey)) {\n          track(rawTarget, \"has\", key);\n        }\n        track(rawTarget, \"has\", rawKey);\n      }\n      return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n    },\n    forEach(callback, thisArg) {\n      const observed = this;\n      const target = observed[\"__v_raw\"];\n      const rawTarget = toRaw(target);\n      const wrap = shallow ? toShallow : readonly ? toReadonly : toReactive;\n      !readonly && track(rawTarget, \"iterate\", ITERATE_KEY);\n      return target.forEach((value, key) => {\n        return callback.call(thisArg, wrap(value), wrap(key), observed);\n      });\n    }\n  };\n  extend(\n    instrumentations,\n    readonly ? {\n      add: createReadonlyMethod(\"add\"),\n      set: createReadonlyMethod(\"set\"),\n      delete: createReadonlyMethod(\"delete\"),\n      clear: createReadonlyMethod(\"clear\")\n    } : {\n      add(value) {\n        if (!shallow && !isShallow(value) && !isReadonly(value)) {\n          value = toRaw(value);\n        }\n        const target = toRaw(this);\n        const proto = getProto(target);\n        const hadKey = proto.has.call(target, value);\n        if (!hadKey) {\n          target.add(value);\n          trigger(target, \"add\", value, value);\n        }\n        return this;\n      },\n      set(key, value) {\n        if (!shallow && !isShallow(value) && !isReadonly(value)) {\n          value = toRaw(value);\n        }\n        const target = toRaw(this);\n        const { has, get } = getProto(target);\n        let hadKey = has.call(target, key);\n        if (!hadKey) {\n          key = toRaw(key);\n          hadKey = has.call(target, key);\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          checkIdentityKeys(target, has, key);\n        }\n        const oldValue = get.call(target, key);\n        target.set(key, value);\n        if (!hadKey) {\n          trigger(target, \"add\", key, value);\n        } else if (hasChanged(value, oldValue)) {\n          trigger(target, \"set\", key, value, oldValue);\n        }\n        return this;\n      },\n      delete(key) {\n        const target = toRaw(this);\n        const { has, get } = getProto(target);\n        let hadKey = has.call(target, key);\n        if (!hadKey) {\n          key = toRaw(key);\n          hadKey = has.call(target, key);\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          checkIdentityKeys(target, has, key);\n        }\n        const oldValue = get ? get.call(target, key) : void 0;\n        const result = target.delete(key);\n        if (hadKey) {\n          trigger(target, \"delete\", key, void 0, oldValue);\n        }\n        return result;\n      },\n      clear() {\n        const target = toRaw(this);\n        const hadItems = target.size !== 0;\n        const oldTarget = !!(process.env.NODE_ENV !== \"production\") ? isMap(target) ? new Map(target) : new Set(target) : void 0;\n        const result = target.clear();\n        if (hadItems) {\n          trigger(\n            target,\n            \"clear\",\n            void 0,\n            void 0,\n            oldTarget\n          );\n        }\n        return result;\n      }\n    }\n  );\n  const iteratorMethods = [\n    \"keys\",\n    \"values\",\n    \"entries\",\n    Symbol.iterator\n  ];\n  iteratorMethods.forEach((method) => {\n    instrumentations[method] = createIterableMethod(method, readonly, shallow);\n  });\n  return instrumentations;\n}\nfunction createInstrumentationGetter(isReadonly2, shallow) {\n  const instrumentations = createInstrumentations(isReadonly2, shallow);\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n    return Reflect.get(\n      hasOwn(instrumentations, key) && key in target ? instrumentations : target,\n      key,\n      receiver\n    );\n  };\n}\nconst mutableCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has, key) {\n  const rawKey = toRaw(key);\n  if (rawKey !== key && has.call(target, rawKey)) {\n    const type = toRawType(target);\n    warn(\n      `Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`\n    );\n  }\n}\n\nconst reactiveMap = /* @__PURE__ */ new WeakMap();\nconst shallowReactiveMap = /* @__PURE__ */ new WeakMap();\nconst readonlyMap = /* @__PURE__ */ new WeakMap();\nconst shallowReadonlyMap = /* @__PURE__ */ new WeakMap();\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1 /* COMMON */;\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2 /* COLLECTION */;\n    default:\n      return 0 /* INVALID */;\n  }\n}\nfunction getTargetType(value) {\n  return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 /* INVALID */ : targetTypeMap(toRawType(value));\n}\nfunction reactive(target) {\n  if (isReadonly(target)) {\n    return target;\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap\n  );\n}\nfunction shallowReactive(target) {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap\n  );\n}\nfunction readonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap\n  );\n}\nfunction shallowReadonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    shallowReadonlyHandlers,\n    shallowReadonlyCollectionHandlers,\n    shallowReadonlyMap\n  );\n}\nfunction createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {\n  if (!isObject(target)) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `value cannot be made ${isReadonly2 ? \"readonly\" : \"reactive\"}: ${String(\n          target\n        )}`\n      );\n    }\n    return target;\n  }\n  if (target[\"__v_raw\"] && !(isReadonly2 && target[\"__v_isReactive\"])) {\n    return target;\n  }\n  const existingProxy = proxyMap.get(target);\n  if (existingProxy) {\n    return existingProxy;\n  }\n  const targetType = getTargetType(target);\n  if (targetType === 0 /* INVALID */) {\n    return target;\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers\n  );\n  proxyMap.set(target, proxy);\n  return proxy;\n}\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"]);\n  }\n  return !!(value && value[\"__v_isReactive\"]);\n}\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"]);\n}\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\nfunction isProxy(value) {\n  return value ? !!value[\"__v_raw\"] : false;\n}\nfunction toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"];\n  return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n  if (!hasOwn(value, \"__v_skip\") && Object.isExtensible(value)) {\n    def(value, \"__v_skip\", true);\n  }\n  return value;\n}\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction isRef(r) {\n  return r ? r[\"__v_isRef\"] === true : false;\n}\nfunction ref(value) {\n  return createRef(value, false);\n}\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n  return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n  constructor(value, isShallow2) {\n    this.dep = new Dep();\n    this[\"__v_isRef\"] = true;\n    this[\"__v_isShallow\"] = false;\n    this._rawValue = isShallow2 ? value : toRaw(value);\n    this._value = isShallow2 ? value : toReactive(value);\n    this[\"__v_isShallow\"] = isShallow2;\n  }\n  get value() {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      this.dep.track({\n        target: this,\n        type: \"get\",\n        key: \"value\"\n      });\n    } else {\n      this.dep.track();\n    }\n    return this._value;\n  }\n  set value(newValue) {\n    const oldValue = this._rawValue;\n    const useDirectValue = this[\"__v_isShallow\"] || isShallow(newValue) || isReadonly(newValue);\n    newValue = useDirectValue ? newValue : toRaw(newValue);\n    if (hasChanged(newValue, oldValue)) {\n      this._rawValue = newValue;\n      this._value = useDirectValue ? newValue : toReactive(newValue);\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        this.dep.trigger({\n          target: this,\n          type: \"set\",\n          key: \"value\",\n          newValue,\n          oldValue\n        });\n      } else {\n        this.dep.trigger();\n      }\n    }\n  }\n}\nfunction triggerRef(ref2) {\n  if (ref2.dep) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      ref2.dep.trigger({\n        target: ref2,\n        type: \"set\",\n        key: \"value\",\n        newValue: ref2._value\n      });\n    } else {\n      ref2.dep.trigger();\n    }\n  }\n}\nfunction unref(ref2) {\n  return isRef(ref2) ? ref2.value : ref2;\n}\nfunction toValue(source) {\n  return isFunction(source) ? source() : unref(source);\n}\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => key === \"__v_raw\" ? target : unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n  constructor(factory) {\n    this[\"__v_isRef\"] = true;\n    this._value = void 0;\n    const dep = this.dep = new Dep();\n    const { get, set } = factory(dep.track.bind(dep), dep.trigger.bind(dep));\n    this._get = get;\n    this._set = set;\n  }\n  get value() {\n    return this._value = this._get();\n  }\n  set value(newVal) {\n    this._set(newVal);\n  }\n}\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isProxy(object)) {\n    warn(`toRefs() expects a reactive object but received a plain one.`);\n  }\n  const ret = isArray(object) ? new Array(object.length) : {};\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key);\n  }\n  return ret;\n}\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this[\"__v_isRef\"] = true;\n    this._value = void 0;\n  }\n  get value() {\n    const val = this._object[this._key];\n    return this._value = val === void 0 ? this._defaultValue : val;\n  }\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n  get dep() {\n    return getDepFromReactive(toRaw(this._object), this._key);\n  }\n}\nclass GetterRefImpl {\n  constructor(_getter) {\n    this._getter = _getter;\n    this[\"__v_isRef\"] = true;\n    this[\"__v_isReadonly\"] = true;\n    this._value = void 0;\n  }\n  get value() {\n    return this._value = this._getter();\n  }\n}\nfunction toRef(source, key, defaultValue) {\n  if (isRef(source)) {\n    return source;\n  } else if (isFunction(source)) {\n    return new GetterRefImpl(source);\n  } else if (isObject(source) && arguments.length > 1) {\n    return propertyToRef(source, key, defaultValue);\n  } else {\n    return ref(source);\n  }\n}\nfunction propertyToRef(source, key, defaultValue) {\n  const val = source[key];\n  return isRef(val) ? val : new ObjectRefImpl(source, key, defaultValue);\n}\n\nclass ComputedRefImpl {\n  constructor(fn, setter, isSSR) {\n    this.fn = fn;\n    this.setter = setter;\n    /**\n     * @internal\n     */\n    this._value = void 0;\n    /**\n     * @internal\n     */\n    this.dep = new Dep(this);\n    /**\n     * @internal\n     */\n    this.__v_isRef = true;\n    // TODO isolatedDeclarations \"__v_isReadonly\"\n    // A computed is also a subscriber that tracks other deps\n    /**\n     * @internal\n     */\n    this.deps = void 0;\n    /**\n     * @internal\n     */\n    this.depsTail = void 0;\n    /**\n     * @internal\n     */\n    this.flags = 16;\n    /**\n     * @internal\n     */\n    this.globalVersion = globalVersion - 1;\n    /**\n     * @internal\n     */\n    this.next = void 0;\n    // for backwards compat\n    this.effect = this;\n    this[\"__v_isReadonly\"] = !setter;\n    this.isSSR = isSSR;\n  }\n  /**\n   * @internal\n   */\n  notify() {\n    this.flags |= 16;\n    if (!(this.flags & 8) && // avoid infinite self recursion\n    activeSub !== this) {\n      batch(this, true);\n      return true;\n    } else if (!!(process.env.NODE_ENV !== \"production\")) ;\n  }\n  get value() {\n    const link = !!(process.env.NODE_ENV !== \"production\") ? this.dep.track({\n      target: this,\n      type: \"get\",\n      key: \"value\"\n    }) : this.dep.track();\n    refreshComputed(this);\n    if (link) {\n      link.version = this.dep.version;\n    }\n    return this._value;\n  }\n  set value(newValue) {\n    if (this.setter) {\n      this.setter(newValue);\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\"Write operation failed: computed value is readonly\");\n    }\n  }\n}\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  if (isFunction(getterOrOptions)) {\n    getter = getterOrOptions;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n  const cRef = new ComputedRefImpl(getter, setter, isSSR);\n  if (!!(process.env.NODE_ENV !== \"production\") && debugOptions && !isSSR) {\n    cRef.onTrack = debugOptions.onTrack;\n    cRef.onTrigger = debugOptions.onTrigger;\n  }\n  return cRef;\n}\n\nconst TrackOpTypes = {\n  \"GET\": \"get\",\n  \"HAS\": \"has\",\n  \"ITERATE\": \"iterate\"\n};\nconst TriggerOpTypes = {\n  \"SET\": \"set\",\n  \"ADD\": \"add\",\n  \"DELETE\": \"delete\",\n  \"CLEAR\": \"clear\"\n};\nconst ReactiveFlags = {\n  \"SKIP\": \"__v_skip\",\n  \"IS_REACTIVE\": \"__v_isReactive\",\n  \"IS_READONLY\": \"__v_isReadonly\",\n  \"IS_SHALLOW\": \"__v_isShallow\",\n  \"RAW\": \"__v_raw\",\n  \"IS_REF\": \"__v_isRef\"\n};\n\nconst WatchErrorCodes = {\n  \"WATCH_GETTER\": 2,\n  \"2\": \"WATCH_GETTER\",\n  \"WATCH_CALLBACK\": 3,\n  \"3\": \"WATCH_CALLBACK\",\n  \"WATCH_CLEANUP\": 4,\n  \"4\": \"WATCH_CLEANUP\"\n};\nconst INITIAL_WATCHER_VALUE = {};\nconst cleanupMap = /* @__PURE__ */ new WeakMap();\nlet activeWatcher = void 0;\nfunction getCurrentWatcher() {\n  return activeWatcher;\n}\nfunction onWatcherCleanup(cleanupFn, failSilently = false, owner = activeWatcher) {\n  if (owner) {\n    let cleanups = cleanupMap.get(owner);\n    if (!cleanups) cleanupMap.set(owner, cleanups = []);\n    cleanups.push(cleanupFn);\n  } else if (!!(process.env.NODE_ENV !== \"production\") && !failSilently) {\n    warn(\n      `onWatcherCleanup() was called when there was no active watcher to associate with.`\n    );\n  }\n}\nfunction watch(source, cb, options = EMPTY_OBJ) {\n  const { immediate, deep, once, scheduler, augmentJob, call } = options;\n  const warnInvalidSource = (s) => {\n    (options.onWarn || warn)(\n      `Invalid watch source: `,\n      s,\n      `A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.`\n    );\n  };\n  const reactiveGetter = (source2) => {\n    if (deep) return source2;\n    if (isShallow(source2) || deep === false || deep === 0)\n      return traverse(source2, 1);\n    return traverse(source2);\n  };\n  let effect;\n  let getter;\n  let cleanup;\n  let boundCleanup;\n  let forceTrigger = false;\n  let isMultiSource = false;\n  if (isRef(source)) {\n    getter = () => source.value;\n    forceTrigger = isShallow(source);\n  } else if (isReactive(source)) {\n    getter = () => reactiveGetter(source);\n    forceTrigger = true;\n  } else if (isArray(source)) {\n    isMultiSource = true;\n    forceTrigger = source.some((s) => isReactive(s) || isShallow(s));\n    getter = () => source.map((s) => {\n      if (isRef(s)) {\n        return s.value;\n      } else if (isReactive(s)) {\n        return reactiveGetter(s);\n      } else if (isFunction(s)) {\n        return call ? call(s, 2) : s();\n      } else {\n        !!(process.env.NODE_ENV !== \"production\") && warnInvalidSource(s);\n      }\n    });\n  } else if (isFunction(source)) {\n    if (cb) {\n      getter = call ? () => call(source, 2) : source;\n    } else {\n      getter = () => {\n        if (cleanup) {\n          pauseTracking();\n          try {\n            cleanup();\n          } finally {\n            resetTracking();\n          }\n        }\n        const currentEffect = activeWatcher;\n        activeWatcher = effect;\n        try {\n          return call ? call(source, 3, [boundCleanup]) : source(boundCleanup);\n        } finally {\n          activeWatcher = currentEffect;\n        }\n      };\n    }\n  } else {\n    getter = NOOP;\n    !!(process.env.NODE_ENV !== \"production\") && warnInvalidSource(source);\n  }\n  if (cb && deep) {\n    const baseGetter = getter;\n    const depth = deep === true ? Infinity : deep;\n    getter = () => traverse(baseGetter(), depth);\n  }\n  const scope = getCurrentScope();\n  const watchHandle = () => {\n    effect.stop();\n    if (scope) {\n      remove(scope.effects, effect);\n    }\n  };\n  if (once && cb) {\n    const _cb = cb;\n    cb = (...args) => {\n      _cb(...args);\n      watchHandle();\n    };\n  }\n  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;\n  const job = (immediateFirstRun) => {\n    if (!(effect.flags & 1) || !effect.dirty && !immediateFirstRun) {\n      return;\n    }\n    if (cb) {\n      const newValue = effect.run();\n      if (deep || forceTrigger || (isMultiSource ? newValue.some((v, i) => hasChanged(v, oldValue[i])) : hasChanged(newValue, oldValue))) {\n        if (cleanup) {\n          cleanup();\n        }\n        const currentWatcher = activeWatcher;\n        activeWatcher = effect;\n        try {\n          const args = [\n            newValue,\n            // pass undefined as the old value when it's changed for the first time\n            oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,\n            boundCleanup\n          ];\n          call ? call(cb, 3, args) : (\n            // @ts-expect-error\n            cb(...args)\n          );\n          oldValue = newValue;\n        } finally {\n          activeWatcher = currentWatcher;\n        }\n      }\n    } else {\n      effect.run();\n    }\n  };\n  if (augmentJob) {\n    augmentJob(job);\n  }\n  effect = new ReactiveEffect(getter);\n  effect.scheduler = scheduler ? () => scheduler(job, false) : job;\n  boundCleanup = (fn) => onWatcherCleanup(fn, false, effect);\n  cleanup = effect.onStop = () => {\n    const cleanups = cleanupMap.get(effect);\n    if (cleanups) {\n      if (call) {\n        call(cleanups, 4);\n      } else {\n        for (const cleanup2 of cleanups) cleanup2();\n      }\n      cleanupMap.delete(effect);\n    }\n  };\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    effect.onTrack = options.onTrack;\n    effect.onTrigger = options.onTrigger;\n  }\n  if (cb) {\n    if (immediate) {\n      job(true);\n    } else {\n      oldValue = effect.run();\n    }\n  } else if (scheduler) {\n    scheduler(job.bind(null, true), true);\n  } else {\n    effect.run();\n  }\n  watchHandle.pause = effect.pause.bind(effect);\n  watchHandle.resume = effect.resume.bind(effect);\n  watchHandle.stop = watchHandle;\n  return watchHandle;\n}\nfunction traverse(value, depth = Infinity, seen) {\n  if (depth <= 0 || !isObject(value) || value[\"__v_skip\"]) {\n    return value;\n  }\n  seen = seen || /* @__PURE__ */ new Set();\n  if (seen.has(value)) {\n    return value;\n  }\n  seen.add(value);\n  depth--;\n  if (isRef(value)) {\n    traverse(value.value, depth, seen);\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], depth, seen);\n    }\n  } else if (isSet(value) || isMap(value)) {\n    value.forEach((v) => {\n      traverse(v, depth, seen);\n    });\n  } else if (isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], depth, seen);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n      if (Object.prototype.propertyIsEnumerable.call(value, key)) {\n        traverse(value[key], depth, seen);\n      }\n    }\n  }\n  return value;\n}\n\nexport { ARRAY_ITERATE_KEY, EffectFlags, EffectScope, ITERATE_KEY, MAP_KEY_ITERATE_KEY, ReactiveEffect, ReactiveFlags, TrackOpTypes, TriggerOpTypes, WatchErrorCodes, computed, customRef, effect, effectScope, enableTracking, getCurrentScope, getCurrentWatcher, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onEffectCleanup, onScopeDispose, onWatcherCleanup, pauseTracking, proxyRefs, reactive, reactiveReadArray, readonly, ref, resetTracking, shallowReactive, shallowReadArray, shallowReadonly, shallowRef, stop, toRaw, toReactive, toReadonly, toRef, toRefs, toValue, track, traverse, trigger, triggerRef, unref, watch };\n"],"names":["makeMap","str","map","key","val","extend","hasOwnProperty","hasOwn","isArray","isMap","toTypeString","isString","isSymbol","isObject","objectToString","value","toRawType","isIntegerKey","cacheStringFunction","fn","cache","capitalize","hasChanged","oldValue","warn","msg","args","activeSub","batchDepth","batchedSub","startBatch","endBatch","error","next","err","shouldTrack","trackStack","pauseTracking","resetTracking","last","Dep","computed","debugInfo","head","link","targetMap","ITERATE_KEY","MAP_KEY_ITERATE_KEY","ARRAY_ITERATE_KEY","track","target","type","depsMap","dep","trigger","newValue","oldTarget","run","targetIsArray","isArrayIndex","newLength","key2","reactiveReadArray","array","raw","toRaw","isShallow","toReactive","shallowReadArray","arr","arrayInstrumentations","iterator","x","thisArg","apply","v","searchProxy","separator","noTracking","reduce","comparer","self","method","wrapValue","iter","result","arrayProto","wrappedRetFn","needsWrap","methodFn","result2","wrappedFn","item","index","acc","res","isProxy","isNonTrackableKeys","builtInSymbols","obj","BaseReactiveHandler","_isReadonly","_isShallow","receiver","isReadonly2","isShallow2","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","isRef","readonly","reactive","MutableReactiveHandler","isOldValueReadonly","isReadonly","hadKey","ReadonlyReactiveHandler","mutableHandlers","readonlyHandlers","shallowReadonlyHandlers","toShallow","getProto","createIterableMethod","rawTarget","targetIsMap","isPair","isKeyOnly","innerIterator","wrap","toReadonly","done","createReadonlyMethod","createInstrumentations","shallow","instrumentations","rawKey","has","callback","observed","get","checkIdentityKeys","hadItems","createInstrumentationGetter","mutableCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","createReactiveObject","shallowReadonly","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","r","ref","createRef","rawValue","RefImpl","useDirectValue"],"mappings":"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","x_google_ignoreList":[0,1]}